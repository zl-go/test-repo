name: contentful automic backup

on: 
#   push
   workflow_dispatch
  # schedule:
  # - cron: "0 12 * * 5"

jobs:
  export:
    runs-on: ubuntu-latest
    outputs:
      op_setup: ${{ steps.conclusion.outputs.setup }}
      op_install: ${{ steps.conclusion.outputs.install }}
      op_export: ${{ steps.conclusion.outputs.export }}
      op_push: ${{ steps.conclusion.outputs.push }}
      op_backup: ${{ steps.conclusion.outputs.backup }}
      
    steps:
      - uses: actions/checkout@master
 
      - id: setup
        uses: actions/setup-node@v3.5.1
      
      - id: install
        run: npm install -g contentful-cli
           
      - id: export
        run: |
          export_date=`date +%Y-%m-%d`
          echo "export_date=${export_date}" >> $GITHUB_ENV
          mkdir contentful/${export_date}
          contentful space export --config contentful/export-config.json --export-dir contentful/${export_date}/ --error-log-file contentful/${export_date}/error.json --mt ${{ secrets.Contentful_Export_Token }}
                       
      - id: push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "push the contenful backup file"
          
      - id: conclusion
        if: ${{ always() }}
        run: |
         echo "setup=${{steps.setup.conclusion}}" >> $GITHUB_OUTPUT
         echo "install=${{steps.install.conclusion}}" >> $GITHUB_OUTPUT
         echo "export=${{steps.export.conclusion}}" >> $GITHUB_OUTPUT
         echo "push=${{steps.push.conclusion}}" >> $GITHUB_OUTPUT
         [ -f contentful/${{env.export_date}}/error.json ]  && echo "backup=failure" >> $GITHUB_OUTPUT || echo "backup=success" >> $GITHUB_OUTPUT      

  send-email:
    if: ${{ always() }}
    needs: export
    runs-on: ubuntu-latest
    steps:
      
      - name: edit the email content out of the export job output
        run: |
         export_date=`date +%Y-%m-%d`
         echo ${{needs.export.outputs.op_setup}}
         if [ ${{needs.export.outputs.op_setup}} == faliure  ];then 
          echo "email_subject=[SUCCESS]Contentful backup inform" >> $GITHUB_ENV
          echo "email_body=setup node.js environment failure" >> $GITHUB_ENV
          
         elif [ ${{needs.export.outputs.op_install}} == faliure ];then 
          echo "email_subject=[SUCCESS]Contentful backup inform" >> $GITHUB_ENV
          echo "email_body=install contentful cli fail" >> $GITHUB_ENV
          
         elif [ ${{needs.export.outputs.op_export}} == faliure ];then 
          echo "email_subject=[SUCCESS]Contentful backup inform" >> $GITHUB_ENV
          echo "email_body=export data fail" >> $GITHUB_ENV

          
         elif [ ${{needs.export.outputs.op_push}} == faliure];then 
          echo "email_subject=[SUCCESS]Contentful backup inform" >> $GITHUB_ENV
          echo "email_body=push data fail" >> $GITHUB_ENV

          
         elif [ ${{needs.export.outputs.op_backup}} == faliure ];then 
          echo "email_subject=[SUCCESS]Contentful backup inform" >> $GITHUB_ENV
          echo "email_body=contentful data backup fail,here is the log attached" >> $GITHUB_ENV
          echo "email_attachments = contentful/${export_date}/error.json" >> $GITHUB_ENV 
          
         else
          echo "email_subject=[SUCCESS]Contentful backup inform" >> $GITHUB_ENV
          echo "email_body=successfully backup the contentful data!here is the data attached" >> $GITHUB_ENV
          echo "email_attachments = contentful/${export_date}/export.json" >> $GITHUB_ENV 
          
         fi
        
      - name: Send inform mail
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.qq.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: ${{ env.email_subject }}
          body: ${{ env.email_body }}
          attachments: ${{ env.email_attachments }}
          to: 2983604867@qq.com
          from: GitHub Actions
        
        
        
        
        
